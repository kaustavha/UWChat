{spawn} = require 'child_process'
fs = require 'fs'
option '-t', '--type [TYPE]', 'type of compile target, cordova or simple'

run = (spawnable, args=[], options={}, cb) ->
    console.log 'running ' + spawnable + ' ' + args + '...'
    options.stdio = 'inherit'
    cmd = spawn spawnable, args, options
    cmd.on 'exit', (res) ->
        if res is 0
            console.log 'Ran ' + spawnable
            cb() if cb
        else
            process.exit(res)

#fix .json packages
fixPkg = (dir, name, cb) ->
    file = dir + name + '.json'
    fs.rename file + '.js', file, (err) ->
        return console.log err if err
        fs.readFile file, (err, data) ->
            return console.log err if err
            data = data.toString() # stringify buffer            
            pos = data.indexOf '\n' # position of end of first line which is 'generated by coffescript ver. no.'
            if pos isnt -1
                data = data.substr pos + 2 #extract desired string, pos + 2 is done to remove /n and (
                data = data.substr 0, data.length - 3 # remove ); at end
                fs.writeFile file, data, (err) ->
                    console.log err if err           
                    return cb() if cb
            else
                console.log 'Unexpected end or beginning of file' + file


task 'build', 'copy and transpile tool files, i.e gulp, bower & npm package, and run gulp', 
(options) ->
    inDir = './tools'
    if options.type is 'simple'        
        outDir = './dist'        
    else if options.type is 'cordova'
        outDir = './'
    else
        outDir = './'
    run 'coffee', ['-b', '-o', outDir, '-c', inDir], {}, ->
        fixPkg outDir, 'bower', ->
            fixPkg outDir, 'package', ->
                run 'npm', ['install'], {uid: 0, cwd: outDir}, ->
                    run 'bower', ['install'], {uid: 1000, cwd: outDir}, ->
                        run 'gulp', ['default', '--type', options.type], {cwd: outDir}, ->
                            console.log 'Done :)'